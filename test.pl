%:-["display.pl","game.pl", "gameover.pl", "utilsAIvsAi.pl", "utilsAIvsH.pl", "utilsHvsAi.pl", "utilsHvsH.pl", "init.pl"].
:-["Puissance4.pl"].

testSameLine :- write('sameLine'), sameLine(1,2), sameLine(40,41),not( sameLine(6,7)),not( sameLine(1,41)),writeln(' : check').

testSameItem :-  write('sameItem'), sameItem(39,40,41,42,
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,_18,_19,_20,_21,
 _22,_23,_24,_25,_26,_27,_28,
 _29,_30,_31,_32,_33,_34,_35,
 _36,_37,_38,'O','O','O','O'],
'O'),
 sameItem(39,33,27,21,
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,_18,_19,_20,'O',
 _22,_23,_24,_25,_26,'O',_28,
 _29,_30,_31,_32,'O',_34,_35,
 _36,_37,_38,'O',_40,_41,_42],
'O'),
not( sameItem(39,40,41,42,
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,_18,_19,_20,_21,
 _22,_23,_24,_25,_26,_27,_28,
 _29,_30,_31,_32,_33,_34,_35,
 _36,_37,_38,'O','X','O','X'],
'O')), writeln(' : check').

testWinnerHorizontal :-  write('winnerHorizontal'), winnerHorizontal(
['a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','X','X','X','X','a','a']
, 'X', 1),
 winnerHorizontal(
['a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','O','O','O','O','a','a']
, 'O', 1),
 not( winnerHorizontal(
['X','X','X','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a']
, 'X', 1)),
 not( winnerHorizontal(
['a','a','a','a','a','X','X',
'X','X','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a',
'a','a','a','a','a','a','a']
, 'X', 1)), writeln(' : check').

testWinnerVertical :- write('winnerVertical'), winnerVertical(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 'X',_16,_17,_18,_19,_20,_21,
 'X',_23,_24,_25,_26,_27,_28,
 'X',_30,_31,_32,_33,_34,_35,
 'X',_37,_38,_39,_40,_41,_42]
, 'X', 1),
not( winnerVertical(
[_01,_02,_03,_04,_05,_06,_07,
 _08,'O',_10,_11,_12,_13,_14,
 _15,'O',_17,_18,_19,_20,_21,
 'O',_23,_24,_25,_26,_27,_28,
 'O',_30,_31,_32,_33,_34,_35,
 'O',_37,_38,_39,_40,_41,_42]
, 'O', 1)), writeln(' : check').

testWinnerDiagonale1 :-  write('winnerDiagonale1'), winnerDiagonale1(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'X',_19,_20,_21,
 _22,_23,'X',_25,'X',_27,_28,
 _29,'X',_31,_32,_33,'X',_35,
 'X',_37,_38,_39,_40,_41,'X']
, 'X', 1),
 winnerDiagonale1(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'X',_19,_20,_21,
 _22,_23,_24,_25,'X',_27,_28,
 _29,_30,_31,_32,_33,'X',_35,
 _36,_37,_38,_39,_40,_41,'X']
, 'X', 1),
not( winnerDiagonale1(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'O',_19,_20,_21,
 _22,_23,_24,_25,'X',_27,_28,
 _29,_30,_31,_32,_33,'O',_35,
 _36,_37,_38,_39,_40,_41,'X']
, 'X', 1)), writeln(' : check').

testWinnerDiagonale2 :-  write('winnerDiagonale2'), winnerDiagonale2(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'X',_19,_20,_21,
 _22,_23,'X',_25,'X',_27,_28,
 _29,'X',_31,_32,_33,'X',_35,
 'X',_37,_38,_39,_40,_41,'X']
, 'X', 1),
 winnerDiagonale2(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'X',_19,_20,_21,
 _22,_23,'X',_25,_26,_27,_28,
 _29,'X',_31,_32,_33,_34,_35,
 'X',_37,_38,_39,_40,_41,_42]
, 'X', 1),
not( winnerDiagonale2(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'X',_19,_20,_21,
 _22,_23,'X',_25,_26,_27,_28,
 _29,'O',_31,_32,_33,_34,_35,
 'X',_37,_38,_39,_40,_41,_42]
, 'O', 1)), writeln(' : check').

testWinner :-  write('winner'), winner(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,_18,_19,_20,_21,
 _22,_23,_24,_25,_26,_27,_28,
 _29,_30,_31,_32,_33,_34,_35,
 _36,'X','X','X','X',_41,_42]
, 'X'),
 winner(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 'X',_16,_17,_18,_19,_20,_21,
 'X',_23,_24,_25,_26,_27,_28,
 'X',_30,_31,_32,_33,_34,_35,
 'X',_37,_38,_39,_40,_41,_42]
, 'X'),
 winner(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'X',_19,_20,_21,
 _22,_23,'X',_25,_26,_27,_28,
 _29,'X',_31,_32,_33,_34,_35,
 'X',_37,_38,_39,_40,_41,_42]
, 'X'),
 winner(
[_01,_02,_03,_04,_05,_06,_07,
 _08,_09,_10,_11,_12,_13,_14,
 _15,_16,_17,'X',_19,_20,_21,
 _22,_23,_24,_25,'X',_27,_28,
 _29,_30,_31,_32,_33,'X',_35,
 _36,_37,_38,_39,_40,_41,'X']
, 'X'),
not( winner(
[_12,_13,_14,_15,_16,_17,_18,
_19,_20,_21,_25,'X',_23,_24,
'X','O',_25,_26,'O',_27,_28,
'X','X','O',_29,'O',_30,_31,
'O','O','X','X','O','O','O',
'O','O','X','O','X','X','X']
, 'O')), writeln(' : check').

testWinners :- testSameLine, testSameItem, testWinnerHorizontal, testWinnerVertical, testWinnerDiagonale1, testWinnerDiagonale2, testWinner.

testIsBoardFull :-  write('isBoardFull'), isBoardFull([]),
   isBoardFull(
            ['O','O','O','X','O','O','X',
            'O','X','X','O','X','X','O',
            'X','O','O','X','O','X','O',
            'X','X','O','X','O','X','X',
            'O','O','X','X','O','O','O',
            'O','O','X','O','X','X','X']),
   not( isBoardFull(
            ['O','O','O',_12,'O','O','X',
            'O','X','X','O','X','X','O',
            'X','O','O','X','O','X','O',
            'X','X','O','X','O','X','X',
            'O','O','X','X','O','O','O',
            'O','O','X','O','X','X','X'])),
   writeln(' : check').

testGameOverWin :-  write('gameover win'),
    assert(board(
           [_12,_13,_14,_15,_16,_17,_18,
            _19,_20,_21,_25,'O',_23,_24,
            'X','O',_25,_26,'O',_27,_28,
            'X','X','O',_29,'O',_30,_31,
            'O','O','X','X','O','O','O',
            'O','O','X','O','X','X','X']
           )),
    gameover('O'),
    retractall( board(_)),
    writeln(' : check').  
   
testGameOverDraw :-  write('gameover draw'),
    assert(board(
           ['O','O','O','X','O','O','X',
            'O','X','X','O','X','X','O',
            'X','O','O','X','O','X','O',
            'X','X','O','X','O','X','X',
            'O','O','X','X','O','O','O',
            'O','O','X','O','X','X','X']
           )),
    gameover('Draw'),
    retractall(board(_)),
    writeln(' : check').

testgameOver :- testIsBoardFull, testGameOverWin, testGameOverDraw.

testInv :-  write('inv'), inv([],[]), inv([1,2],[2,1]),
	inv([1,2,3,4],[4,3,2,1]),
	not(inv([],['X'])),
	writeln(' : check').

testVerif1 :- write('verif1'),
	verif1(39,
		[_01,_02,_03,_04,_05,_06,_07,
		 _08,_09,_10,_11,_12,_13,_14,
		 _15,_16,_17,_18,_19,_20,_21,
		 _22,_23,_24,_25,_26,_27,_28,
		 _29,_30,_31,_32,_33,_34,_35,
		 _36,_37,_38,'O',_38,'O','O'],
		 2),
	not(verif1(40,
		[_01,_02,_03,_04,_05,_06,_07,
		 _08,_09,_10,_11,_12,_13,_14,
		 _15,_16,_17,_18,_19,_20,_21,
		 _22,_23,_24,_25,_26,_27,_28,
		 _29,_30,_31,_32,_33,_34,_35,
		 _36,_37,_38,'O',_38,'O','O'],
		 1)),
	writeln(' : check').
	
testVerif2 :- write('verif2'),
	verif2(1,
		[_01,_02,_03,_04,_05,_06,_07,
		 _08,_09,_10,_11,_12,_13,_14,
		 _15,_16,_17,_18,_19,_20,_21,
		 _22,_23,_24,_25,_26,_27,_28,
		 _29,_30,_31,_32,'O',_34,_35,
		 _36,_37,_38,'O',_38,'O','O'],
		 40),		 
	not(verif2(0,
		[_01,_02,_03,_04,_05,_06,_07,
		 _08,_09,_10,_11,_12,_13,_14,
		 _15,_16,_17,_18,_19,_20,_21,
		 _22,_23,_24,_25,_26,_27,_28,
		 _29,_30,_31,_32,'O',_34,_35,
		 _36,_37,_38,'O',_38,'O','O'],
		 41)),
	writeln(' : check').
 
testIa :-  write('ia'),
	ia(
	[_01,_02,_03,_04,_05,_06,_07,
	 _08,_09,_10,_11,_12,_13,_14,
	 _15,_16,_17,_18,_19,_20,_21,
	 _22,_23,_24,_25,_26,_27,_28,
	 _29,_30,_31,_32,_33,_34,_35,
	 _36,_37,_38,'O',_39,'O','O'],
	40,'O'),

    writeln(' : check').
	 


testPlay :- testVerif1, testInv.


allTests :- testWinners, testgameOver, testInv, testPlay.
